model OAuthAccount {
  provider       String
  providerUserId String
  userId         String
  user           User   @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@id([provider, providerUserId])
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model VerificationToken {
  userId        String
  code          String
  token         String   @unique
  expires       DateTime
  lastAttemptAt DateTime @updatedAt
  attempts      Int      @default(0)
  // Useful to change the user email. This model will contains the next user
  // email, waiting for the user to validate it.
  email         String?
}
