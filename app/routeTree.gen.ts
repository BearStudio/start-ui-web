/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicOnlyImport } from './routes/_public-only'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as PlanetIdImport } from './routes/planet.$id'
import { Route as PublicOnlyLoginImport } from './routes/_public-only/login'
import { Route as AuthenticatedDemoIndexImport } from './routes/_authenticated/demo/index'
import { Route as AuthenticatedDemo2IndexImport } from './routes/_authenticated/demo-2/index'

// Create/Update Routes

const PublicOnlyRoute = PublicOnlyImport.update({
  id: '/_public-only',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PlanetIdRoute = PlanetIdImport.update({
  id: '/planet/$id',
  path: '/planet/$id',
  getParentRoute: () => rootRoute,
} as any)

const PublicOnlyLoginRoute = PublicOnlyLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => PublicOnlyRoute,
} as any)

const AuthenticatedDemoIndexRoute = AuthenticatedDemoIndexImport.update({
  id: '/demo/',
  path: '/demo/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDemo2IndexRoute = AuthenticatedDemo2IndexImport.update({
  id: '/demo-2/',
  path: '/demo-2/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_public-only': {
      id: '/_public-only'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicOnlyImport
      parentRoute: typeof rootRoute
    }
    '/_public-only/login': {
      id: '/_public-only/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PublicOnlyLoginImport
      parentRoute: typeof PublicOnlyImport
    }
    '/planet/$id': {
      id: '/planet/$id'
      path: '/planet/$id'
      fullPath: '/planet/$id'
      preLoaderRoute: typeof PlanetIdImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/demo-2/': {
      id: '/_authenticated/demo-2/'
      path: '/demo-2'
      fullPath: '/demo-2'
      preLoaderRoute: typeof AuthenticatedDemo2IndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/demo/': {
      id: '/_authenticated/demo/'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof AuthenticatedDemoIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedDemo2IndexRoute: typeof AuthenticatedDemo2IndexRoute
  AuthenticatedDemoIndexRoute: typeof AuthenticatedDemoIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDemo2IndexRoute: AuthenticatedDemo2IndexRoute,
  AuthenticatedDemoIndexRoute: AuthenticatedDemoIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface PublicOnlyRouteChildren {
  PublicOnlyLoginRoute: typeof PublicOnlyLoginRoute
}

const PublicOnlyRouteChildren: PublicOnlyRouteChildren = {
  PublicOnlyLoginRoute: PublicOnlyLoginRoute,
}

const PublicOnlyRouteWithChildren = PublicOnlyRoute._addFileChildren(
  PublicOnlyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof PublicOnlyRouteWithChildren
  '/login': typeof PublicOnlyLoginRoute
  '/planet/$id': typeof PlanetIdRoute
  '/demo-2': typeof AuthenticatedDemo2IndexRoute
  '/demo': typeof AuthenticatedDemoIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PublicOnlyRouteWithChildren
  '/login': typeof PublicOnlyLoginRoute
  '/planet/$id': typeof PlanetIdRoute
  '/demo-2': typeof AuthenticatedDemo2IndexRoute
  '/demo': typeof AuthenticatedDemoIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_public-only': typeof PublicOnlyRouteWithChildren
  '/_public-only/login': typeof PublicOnlyLoginRoute
  '/planet/$id': typeof PlanetIdRoute
  '/_authenticated/demo-2/': typeof AuthenticatedDemo2IndexRoute
  '/_authenticated/demo/': typeof AuthenticatedDemoIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/login' | '/planet/$id' | '/demo-2' | '/demo'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/login' | '/planet/$id' | '/demo-2' | '/demo'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_public-only'
    | '/_public-only/login'
    | '/planet/$id'
    | '/_authenticated/demo-2/'
    | '/_authenticated/demo/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  PublicOnlyRoute: typeof PublicOnlyRouteWithChildren
  PlanetIdRoute: typeof PlanetIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  PublicOnlyRoute: PublicOnlyRouteWithChildren,
  PlanetIdRoute: PlanetIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/_public-only",
        "/planet/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/demo-2/",
        "/_authenticated/demo/"
      ]
    },
    "/_public-only": {
      "filePath": "_public-only.tsx",
      "children": [
        "/_public-only/login"
      ]
    },
    "/_public-only/login": {
      "filePath": "_public-only/login.tsx",
      "parent": "/_public-only"
    },
    "/planet/$id": {
      "filePath": "planet.$id.tsx"
    },
    "/_authenticated/demo-2/": {
      "filePath": "_authenticated/demo-2/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/demo/": {
      "filePath": "_authenticated/demo/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
