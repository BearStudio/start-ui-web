services:
  postgres:
    image: postgres:16.1
    env_file:
      - .env
    ports:
      - '${DOCKER_DATABASE_PORT:-5432}:5432'
    environment:
      POSTGRES_DB: $DOCKER_DATABASE_NAME
      POSTGRES_USER: $DOCKER_DATABASE_USERNAME
      POSTGRES_PASSWORD: $DOCKER_DATABASE_PASSWORD
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $DOCKER_DATABASE_NAME']
      interval: 10s
      timeout: 5s
      retries: 5

  initializedatabase:
    build:
      context: .
      dockerfile: docker/initialize-database.dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: 'postgres://${DOCKER_DATABASE_USERNAME}:${DOCKER_DATABASE_PASSWORD}@postgres:${DOCKER_DATABASE_PORT}/${DOCKER_DATABASE_NAME}'

  minio:
    image: 'minio/minio:RELEASE.2024-07-16T23-46-41Z-cpuv1'
    ports:
      - '${DOCKER_FORWARD_MINIO_PORT:-9000}:9000'
      - '${DOCKER_FORWARD_MINIO_CONSOLE_PORT:-9090}:9090'
    environment:
      MINIO_ROOT_USER: $DOCKER_MINIO_USERNAME
      MINIO_ROOT_PASSWORD: $DOCKER_MINIO_PASSWORD
    volumes:
      - 'minio:/data/minio'
    command: minio server /data/minio --console-address ":${FORWARD_MINIO_CONSOLE_PORT:-9090}"
    healthcheck:
      test: ['CMD', 'mc', 'ready', 'local']
      interval: 5s
      timeout: 5s
      retries: 5

  createbuckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    # Set an alias, meaning myminio is an alias for the host, the username and the password, avoiding to type it again in the next commands
    # As an admin, add a new user to scope minio access to this new user, avoiding to use the admin credentials in the application
    # Set the policy readwrite to the user we previously created on the previously created alias
    # Create the bucket on the previously created alias
    # Set the public access policy to download, meaning readonly.
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:${DOCKER_FORWARD_MINIO_PORT:-9000} $DOCKER_MINIO_USERNAME $DOCKER_MINIO_PASSWORD;
      /usr/bin/mc admin user add myminio $S3_ACCESS_KEY_ID $S3_SECRET_ACCESS_KEY;
      /usr/bin/mc admin policy attach myminio readwrite --user $S3_ACCESS_KEY_ID;
      /usr/bin/mc mb myminio/$S3_BUCKET_NAME;
      /usr/bin/mc anonymous set download myminio/$S3_BUCKET_NAME;
      exit 0;
      "

# use docker compose down --volumes to remove volumes declared in this file
volumes:
  minio:
    driver: local
